
;; Number operations

(number? 5)				; #t
(number? 'a)				; #f
(number? "abc")				; #f
(number? #t)				; #f
(number? '())				; #f
(number? (lambda (x) (* x x)))		; #f

(integer? 2)				; #t
(integer? #\a)				; #f

(=)					; #t
(= 1)					; #t
(= 1 1)					; #t
(= 1 2)					; #f
(= 1 1 1 1 1)				; #t
(= 1 1 1 1 2)				; #f

(<)					; #t
(< 1)					; #t
(< 1 2)					; #t
(< 1 1)					; #f
(< 1 -1)				; #f

(>)					; #t
(> 1)					; #t
(> 1 0 -1)				; #t
(> 2 1 2)				; #f

(<= 1 1 1 2)				; #t
(<=)					; #t
(<= 1 0 1 -10)				; #f
(<= -1000 -500 500)			; #t
(<= 1 1 -10)				; #f

(>= 10 9 8 7)				; #t
(>= 10 -10)				; #t
(>= -10 10)				; #f

(>= 'a)					;Expecting numbers


(zero? 0)				; #t
(zero? #\a)				;Expecting a number
(zero? 5)				; #f
(zero? -5)				; #f

(positive?)				;Expecting 1 arguments but was sent 0
(positive? 1 2)				;Expecting 1 arguments but was sent 2
(positive? 0)				; #f
(positive? 1)				; #t
(positive? -1)				; #f

(negative? 0)				; #f
(negative? 1)				; #f
(negative? -1)				; #t

(negative?)				;Expecting 1 arguments but was sent 0
(negative? 1 2 3)		        ;Expecting 1 arguments but was sent 3

(odd?)					;Expecting 1 arguments but was sent 0
(odd? 1)				; #t
(odd? -1)				; #t
(odd? 0)				; #f

(even?)					;Expecting 1 arguments but was sent 0

(even? 0)				; #t
(even? 2)				; #t
(even? 3)				; #f
(even? -3)				; #f

(even? #f)				;Expecting a number

(max)					;Expecting at least 1 argument
(max 1)					; 1
(max 1 2 3 4 5 6 7 8 9 10)		; 10
(max -1 -10000 10)			; 10

(min)					;Expecting at least 1 argument
(min 1 2 3 4 5 6 7 8 9 10)		; 1
(min -10 -9 -8 10 1)			; -10

(+)					; 0
(+ 0)					; 0
(+ 1)					; 1
(+ 1 2 3 -3 -2 -1)			; 0
(+ 10 10 10)				; 30

(-)					;Expecting at least 1 argument
(- 0)					; 0
(- 1)					; -1
(- -1)					; 1
(- 10 50)				; -40
(- -10 -20)				; 10

(*)					; 1
(* 0)					; 0
(* 1)					; 1
(* 10 10)				; 100
(* -10 -10)				; 100
(* -10 10)				; -100

(/)					;Expecting at least 1 argument
(/ 1)					; 1
(/ 2)					; 0
(/ 4 2 1)				; 2
(/ 4 2 -1)				; -2
(/ -1)					; -1
(/ -4 -2)				; 2
(/ -4 2)				; -2

(abs)					;Expecting 1 arguments but was sent 0
(abs 0)					; 0
(abs 100)				; 100
(abs -100)				; 100
(abs 1 1)				;Expecting 1 arguments but was sent 2

(not #t)				; #f
(not #f)				; #t
(not 3)					; #f
